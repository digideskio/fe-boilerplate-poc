/**
 * @section	: See http://css3please.com/ & http://markdotto.com/bootstrap/ for more details
 * @project	: PROJECT_NAAM
 * @author  : Naam Developer <developer@e-sites.nl>
 */

/*------------------------------------*\
    PROJECT MIXINS
\*------------------------------------*/


/*------------------------------------*\
    BUTTONS
\*------------------------------------*/

/**
 * Button variants (courtesy of Bootstrap)
 * Easily pump out default styles, as well as :hover, :focus, :active,
 *
   `.button-variant(@btn-default-color; @btn-default-bg; @btn-default-border);`
 *
 * and disabled options for all buttons
 */
.button-variant(@color; @background; @border) {
	color: @color;
	background-color: @background;
	border-color: @border;

	&:hover,
	&:focus,
	&.focus,
	&:active,
	&.active {
		color: @color;
		background-color: darken(@background, 10%);
		border-color: darken(@border, 12%);
	}
	&:active,
	&.active {
		background-image: none;
	}

	&.disabled,
	&[disabled],
	fieldset[disabled] & {
		&,
		&:hover,
		&:focus,
		&.focus,
		&:active,
		&.active {
			background-color: @background;
			border-color: @border;
		}
	}
}

// Button sizes
.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
	padding: @padding-vertical @padding-horizontal;
	font-size: @font-size;
	line-height: @line-height;
	border-radius: @border-radius;
}

/*------------------------------------*\
    FORMS
\*------------------------------------*/

// WebKit-style focus
.tab-focus() {
	// Default
	outline: thin dotted;
	// WebKit
	outline: 5px auto -webkit-focus-ring-color;
	outline-offset: -2px;
}

/**
 * Form control focus state
 *
 * Generate a customized focus state and for any input with the specified color,
 * which defaults to the `@input-border-focus` variable.
 *
 * We highly encourage you to not customize the default value, but instead use
 * this to tweak colors on an as-needed basis. This aesthetic change is based on
 * WebKit's default styles, but applicable to a wider range of browsers. Its
 * usability and accessibility should be taken into account with any change.
 * 
 * Example usage: change the default blue border and shadow to white for better
 * contrast against a dark gray background.
 */
.form-control-focus(@color: @input-border-focus) {
	@color-rgba: rgba(red(@color), green(@color), blue(@color), .6);

	&:focus {
		.box-shadow(~"inset 0 1px 1px rgba(0,0,0,.075), 0 0 0 2px @{color-rgba}");
		border-color: @color;
		outline: 0;
	}
}

/**
 * Placeholder text
 */
.placeholder(@color: @input-color-placeholder) {
	&::-moz-placeholder {
		color: @color; // Firefox
		opacity: 1; // See https://github.com/twbs/bootstrap/pull/11526
		font-style: italic;
	}
	
	&:-ms-input-placeholder {
		color: @color; // Internet Explorer 10+
		font-style: italic;
	}

	&::-webkit-input-placeholder {
		color: @color; // Safari and Chrome
		font-style: italic;
	}
}

/*------------------------------------*\
    GRID
\*------------------------------------*/

/*------------------------------------*\
    IMAGES
\*------------------------------------*/

/*
	Responsive image
	Keep images from scaling beyond the width of their parents.
 */
.img-responsive(@display: block) {
	display: @display;
	max-width: 100%; // Part 1: Set a maximum relative to the parent
	height: auto; // Part 2: Scale the height according to the width, otherwise you get stretching
}

.hi-res-bg(@bgImage, @width:100%, @height:100%) {
	background-image: url(@bgImage);
	@hiResImage: `'@{bgImage}'.replace(/\.(png|jpe?g|gif)/, '@2x.$1')`;

	@media
		only screen and (~"-webkit-min-device-pixel-ratio: 1.5"),
		only screen and (~"-o-min-device-pixel-ratio: 3/2"),
		only screen and (~"min--moz-device-pixel-ratio: 1.5"),
		only screen and (~"min-device-pixel-ratio: 1.5") {
			& {
				background-image: url(@hiResImage);
				.background-size(@width @height);
			}
		}
}

/*------------------------------------*\
    LAYOUT
\*------------------------------------*/

/* Center-align a block level element */
.center-block {
	display: block;
	margin: 0 auto;
}

.rel() {
	.deprecated('.rel', 'position: relative;');
}

.abs() {
	position: absolute;
}

.abs(@top, @left) {
	.abs();
	top: @top;
	left: @left;
}

/* Sizing shortcuts */
.size(@height: 5px, @width: 5px) {
	height: @height;
	width: @width;
}

.square(@size: 5px) {
	.size(@size, @size);
}

/*------------------------------------*\
    MISC
\*------------------------------------*/

/**
 * Marks deprecated classes and shows a message
 *
   .horizontal {
       .deprecated('.horizontal', '.list-inline');
   }
 * 
 */
.deprecated(@old, @new) {
	@message: '<!> the @{old} class/mixin is deprecated, please use @{new} instead.';

	position: relative !important;
	border: 1px solid #f00 !important;
	padding: 1em !important;

	&:before {
		background: rgba(red(@primary-color),green(@primary-color),blue(@primary-color),0.85);
		border-radius: 3px;
		color: #fff;
		font-weight: bold;
		top: 50%;
		margin-top: -13px;
		right: 1%;
		position: absolute;
		display: inline-block;
		padding: .2em .5em;
		content: '@{message}';
	}
}

/**
 * IE7 inline-block hack
 */
.ie7-inline-block() {
	*display: inline;
	*zoom: 1;
}

/*------------------------------------*\
    TEXT
\*------------------------------------*/

.uc {
	text-transform: uppercase;
}

.lc {
	text-transform: lowercase;
}

/* Add three dots */
.ellipsis() {
	overflow: hidden;
	white-space: nowrap;
	text-overflow: ellipsis;
}

/* Image Replacement */
.hide-text {
	font: ~"0/0 a"; /* https://github.com/h5bp/html5-boilerplate/commit/aa0396eae757 */
	color: transparent;
	text-shadow: none;
	background-color: transparent;
	border: 0;
}

/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `.truncate(100%);`
 *
 * Where `@truncation-boundary` is a united measurement.
 */
.truncate(@truncation-boundary) {
	.ellipsis();
	max-width: @truncation-boundary;
}

/**
 * Hyphenate words at at line breaks
 * Even if characters inside the word suggest where hyphenation could or should go.
 */
.hyphenate {
	 -ms-word-break: break-all;
	     word-break: break-all;

	     // Non standard for webkit
	     word-break: break-word;

	-webkit-hyphens: auto;
	   -moz-hyphens: auto;
	        hyphens: auto;
}

/*------------------------------------*\
    TYPOGRAPHY
\*------------------------------------*/

/**
 * Calculates the correct font-size and rounds it with 3 decimals after the comma
 */
.font-size(@wanted, @base) {
	@result: (100 * (@wanted / @base));
	@fixed: `Number(@{result}).toFixed(3).replace(/0+$/g,'').replace(/\.$/,'')`;
	font-size: ~"@{fixed}%";
}

/*------------------------------------*\
    VENDOR-PREFIXES
\*------------------------------------*/

.box-sizing(@boxmodel) {
	-webkit-box-sizing: @boxmodel;
	   -moz-box-sizing: @boxmodel;
	        box-sizing: @boxmodel;
}

.border-box {
	.box-sizing(border-box);
}

/* Rounded corners, created some aliasses so corners can be set with or without comma's */
.border-radius(@radius:3px) {
	border-radius: @radius; /* Opera 10.5, IE9, Saf5, Chrome, FF4, iOS 4, Android 2.1+ */

	/* useful if you don't want a bg color from leaking outside the border:*/
	-webkit-background-clip: padding-box;
	   -moz-background-clip: padding;
	        background-clip: padding-box;
}

.border-radius(@vertical, @horizontal) {
	.border-radius(@arguments);
}

.border-radius(@top, @horizontal, @bottom) {
	.border-radius(@arguments);
}

.border-radius(@top, @right, @bottom, @left) {
	.border-radius(@arguments);
}

/* Box shadow */
.box-shadow(@shadow:0 1px 3px rgba(0,0,0,.25)) {
	-webkit-box-shadow: @shadow; /* Saf3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
	        box-shadow: @shadow; /* Opera 10.5, IE9, FF4+, Chrome 6+, iOS 5 */
}

.box-shadow(@isInset, @offsetX, @offsetY, @blurRad, @blurSpread, @color) {
  @inset: ~`@{isInset} === true ? "inset" : ""`;
  -webkit-box-shadow: @inset @offsetX @offsetY @blurRad @blurSpread @color; /* Saf3-4, iOS 4.0.2 - 4.2, Android 2.3+ */
          box-shadow: @inset @offsetX @offsetY @blurRad @blurSpread @color; /* Opera 10.5, IE9, FF4+, Chrome 6+, iOS 5 */
}

/* Vertical gradient (from top to bottom) */
.gradient(@from:#fff, @to:#f00) {
	background-color: @to;
	background-repeat: repeat-x;
	background-image: -moz-linear-gradient(@from, @to);		/* FF 3.6+ */
	background-image: -ms-linear-gradient(@from, @to);		/* IE10 */
	background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @from), color-stop(100%, @to)); /* Safari 4+, Chrome 2+ */
	background-image: -webkit-linear-gradient(@from, @to);	/* Safari 5.1+, Chrome 10+ */
	background-image: -o-linear-gradient(@from, @to);		/* Opera 11.10 */
	background-image: linear-gradient(@from, @to);

	/* IE8+ */
	.lt-ie10 & {
		-ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@from), argb(@to));
	}

	/* IE6 & IE7 */
	.lt-ie8 & {
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)", argb(@from), argb(@to)));
	}
}

/* Vertical gradient with color stop (from top to bottom) */
.gradient(@fromColor, @midColor, @colorStop:50%, @toColor) {
  background-color:  mix(@midColor, @toColor, 80%);
  background-image:  -webkit-gradient(linear, 0 0, 0 100%, from(@fromColor), color-stop(@colorStop, @midColor), to(@toColor)); /* Saf4+, Chrome */
  background-image:  -webkit-linear-gradient(@fromColor, @midColor @colorStop, @toColor); /* Chrome 10+, Saf5.1+, iOS 5+ */
  background-image:     -moz-linear-gradient(top, @fromColor, @midColor @colorStop, @toColor); /* FF3.6 */
  background-image:       -o-linear-gradient(@fromColor, @midColor @colorStop, @toColor); /* Opera 11.10+ */
  background-image:          linear-gradient(@fromColor, @midColor @colorStop, @toColor);
  background-repeat: no-repeat;
  filter: ~"progid:DXImageTransform.Microsoft.gradient(startColorstr=@{fromColor}, endColorstr=@{toColor}, GradientType=0)"; /* IE6-IE9 */
}

/* Crossbrowser rgba for background-color, with a simple alias */
.box-rgba(@color:#fff, @alpha:1) {
	@fadedColor: fade(@color, percentage(@alpha));
	background-color: transparent;
	background-color: @fadedColor; /* FF3+, Saf3+, Opera 10.10+, Chrome, IE9 */

	/* IE6–IE8 */
	.lt-ie9 & {
		filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr=%d, endColorstr=%d, GradientType=0)", argb(@fadedColor), argb(@fadedColor)));
		zoom: 1;
	}
}

/* Box rotate */
.box-rotate(@angle:7.5) {
	-webkit-transform:~"rotate(@{angle}deg)"; /* Saf3.1+, Chrome */
	-moz-transform:~"rotate(@{angle}deg)"; /* FF3.5+ */
	-ms-transform:~"rotate(@{angle}deg)"; /* IE9 */
	-o-transform:~"rotate(@{angle}deg)"; /* Opera 10.5 */
	transform:~"rotate(@{angle}deg)";

	/* IE6–IE8 */
	.lt-ie9 & {
		@deg2rad: `Math.PI * 2 / 360`;
		@rad: `@{angle} * @{deg2rad}`;
		@cos: `Math.cos(@{rad})`;
		@sin: `Math.sin(@{rad})`;
		@minSin: `-@{sin}`;
		filter:e(%("progid:DXImageTransform.Microsoft.Matrix(M11=%d, M12=%d, M21=%d, M22=%d, sizingMethod='auto expand')", @cos, @minSin, @sin, @cos));
		zoom:1;
	}
}

.scale(@ratio:1.5){
	-webkit-transform: scale(@ratio);
	   -moz-transform: scale(@ratio);
	        transform: scale(@ratio);
}

.translate(@x:0, @y:0) {
	-webkit-transform: translate(@x, @y);
	   -moz-transform: translate(@x, @y);
	     -o-transform: translate(@x, @y);
	    -ms-transform: translate(@x, @y);
	        transform: translate(@x, @y);
}

.translate3d(@x, @y, @z) {
	-webkit-transform: translate3d(@x, @y, @z);
	   -moz-transform: translate3d(@x, @y, @z);
	    -ms-transform: translate3d(@x, @y, @z);
	     -o-transform: translate3d(@x, @y, @z);
	        transform: translate3d(@x, @y, @z);
}

/* CSS3 Content Columns */
.content-columns(@columnCount, @columnGap: @gridGutterWidth) {
  -webkit-column-count: @columnCount;
     -moz-column-count: @columnCount;
          column-count: @columnCount;
    -webkit-column-gap: @columnGap;
       -moz-column-gap: @columnGap;
            column-gap: @columnGap;
}

/**
 * Backface visibility
 * Prevent browsers from flickering when using CSS 3D transforms.
 * Default value is `visible`, but can be changed to `hidden`
 */
.backface-visibility(@visibility:hidden) {
	-webkit-backface-visibility: @visibility;
	   -moz-backface-visibility: @visibility;
	    -ms-backface-visibility: @visibility;
	        backface-visibility: @visibility;
}

.transition(@transition:all 0.3s ease-out) {
	-webkit-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
}

.background-size(@size){
	-webkit-background-size: @size;
	   -moz-background-size: @size;
	     -o-background-size: @size;
	        background-size: @size;
}

/* Resize anything */
.resizable(@direction) {
	resize: @direction; /* Options: horizontal, vertical, both, none */
	overflow: auto; /* Safari fix */
}

/* Opacity */
.opacity(@op:1) {
	@opIE: @op * 100;
	opacity: @op; /* Chrome 4+, FF2+, Saf3.1+, Opera 9+, IE9, iOS 3.2+, Android 2.1+ */
	-ms-filter: ~"progid:DXImageTransform.Microsoft.Alpha(opacity=@{opIE})";
	filter: ~"alpha(opacity=@{opIE})";
}

.text-shadow(@hoff:1px, @voff:1px, @blur:1px, @color:fade(@headingColor, 75)) {
	text-shadow: @hoff @voff @blur @color; /* FF3.5+, Opera 9+, Saf1+, Chrome, IE10 */
}

/**
 * User select
 * For selecting text on the page
 */
.user-select(@select) {
	-webkit-user-select: @select;
	   -moz-user-select: @select;
	    -ms-user-select: @select; // IE10+
	        user-select: @select;
}

/**
 * CSS3 Filter mixin
 * Add multiple filters separated by a space
 * 
 * @see https://developer.mozilla.org/en-US/docs/Web/CSS/filter
 *
   div {
       .filter(grayscale(0.5) blur(10px));
   }
 *
 * grayscale      ex: grayscale(100%);
 * sepia          ex: sepia(100%);
 * saturate       ex: saturate(0%);
 * hue-rotate     ex: hue-rotate(45deg);
 * invert         ex: invert(100%);
 * brightness     ex: brightness(15%);
 * contrast       ex: contrast(200%);
 * blur           ex: blur(2px);
 */
.filter(@filter) {	
	-webkit-filter: @filter;
	   -moz-filter: @filter;
	    -ms-filter: @filter;
	        filter: @filter;
}